// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.
$ph-bg: rgba(255, 255, 255, 0.356) !default;

@import 'node_modules/placeholder-loading/src/scss/placeholder-loading';
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$client-primary: mat-palette($mat-blue);
$client-accent: mat-palette($mat-lime, A200, A100, A400);

// The warn palette is optional (defaults to red).
$client-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$client-theme: mat-dark-theme($client-primary, $client-accent, $client-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($client-theme);

/* You can add global styles to this file, and also import other style files */

body {
	height: 100vh;
	margin: 0;
	font-family: Roboto, 'Helvetica Neue', sans-serif;
	color: #010203;
	background-image: linear-gradient(-10deg, rgba(0, 255, 242, 0.116), rgba(193, 227, 255, 0.171));
}

@for $i from 1 through 100 {
	.width-#{$i} {
		width: #{percentage($i/100)};
	}

	.height-#{$i} {
		height: #{percentage($i/100)};
	}
}

.fixed-bottom {
	bottom: 0;
	position: absolute;
}
.fixed-right {
	right: 0;
	position: absolute;
}

.hidden {
	display: none;
}

//$dark-background-palette: map-get($client-theme, primary);

.lit {
	transition: box-shadow 1s ease-in-out;
	//	background-color: mat-color($dark-background-palette, 50);
	box-shadow: inset 0 0 4rem 0 rgba(255, 255, 255, 0.3), 0 0 0.5rem 0 rgba(255, 255, 255, 0.144) !important;
}

/* Pre-render the bigger shadow, but hide it 
.lit::after {
	box-shadow: inset 0 0 0rem 0 rgba(255, 255, 255, 0.3),
		0 0 0rem 0 rgba(255, 255, 255, 0.144) !important;

	
	opacity: 0;
	opacity: 1;
}
*/

.scroll-bar {
	background-color: rgba(0, 0, 0, 0.4) !important;
	border-radius: 4px;
}
.scroll-thumbs {
	background-color: rgba(161, 27, 27, 0.4) !important;
	&:hover,
	&:active {
		background-color: rgba(161, 27, 27, 0.7) !important;
	}
}

.window {
	position: fixed;
	top: 4rem;
	left: 0;
	right: 0;
	bottom: 0;
	height: calc(100vh - 4rem);
}
